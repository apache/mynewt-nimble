#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: Build check

on: [push, pull_request]

jobs:
  targets:
    name: Build all test targets
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.16'
      - uses: carlosperate/arm-none-eabi-gcc-action@48db4484a55750df7a0ccca63347fcdea6534d78
        with:
          release: '12.2.Rel1'
      - name: Install Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
             sudo apt-get update
             sudo apt-get install -y gcc-multilib
      - name: Install newt
        run: |
             go version
             go get mynewt.apache.org/newt/newt@latest
      - name: Setup project
        run: |
             cp .github/project.yml project.yml
             mkdir repos
             git clone --depth=1 https://github.com/apache/mynewt-core repos/apache-mynewt-core
             git clone --depth=1 https://github.com/mcu-tools/mcuboot.git repos/mcuboot
             git clone --depth=1 https://github.com/apache/mynewt-mcumgr repos/apache-mynewt-mcumgr
             git clone --depth=1 https://github.com/hathach/tinyusb.git repos/tinyusb
      - name: Build targets
        shell: bash
        run: |
             cp -r .github/targets ci_targets
             ls ci_targets | xargs -n1 sh -c 'echo "Testing $0"; newt build -q $0'
             rm -rf ci_targets
      - name: Build native targets
        if: matrix.os == 'ubuntu-latest'
        run: |
             cp -r .github/targets_native ci_targets
             ls ci_targets | xargs -n1 sh -c 'echo "Testing $0"; newt build -q $0'
             rm -rf ci_targets
